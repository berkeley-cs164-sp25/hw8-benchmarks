(define (neg x) (- 0 x))
(define (abs x) (if (< x 0) (neg x) x))
(define (double x) (+ x x))
(define (triple x) (+ x (double x)))
(define (quintuple x) (+ (double x) (triple x)))
(define (septuplesub1 x) (- (+ (quintuple x) (double x)) 1))

(let ((x -3))
(let ((x (double x)))
(let ((x (septuplesub1 x)))
(let ((x (triple x)))
(let ((x (quintuple x)))
(let ((x (abs x)))
(print x)))))))
