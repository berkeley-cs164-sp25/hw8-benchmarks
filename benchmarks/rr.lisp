(define (f a b) (+ a b))
(define (g a b) (- a b))
(define (h a b) (add1 (add1 a)))
(define (i a b) (sub1 (sub1 b)))
(define (j a b)
    (if (= a b)
        (f a b)
        (g a b)
    )
)
(define (k a b)
    (if (< 1 2)
        10
        0
    )
)
(define (l a b)
    (if (= 1 2)
        5
        55
    )
)
(define (r q w e r t)
    (let ((x q))
        (let ((y w))
            (let ((z e))
                (let ((a r))
                    (let ((b t))
                        (do
                            (print (f x y))
                            (print (g z a))
                            (print (h y x))
                            (print (i a b))
                            (print (j b a))
                            (print (k y 1))
                            (print (l z x))
                        )
                    )
                )
            )
        )
    )
)
(define (rr x)
    (if (< 0 x)
        (do 
            (r (add1 x) (sub1 x) (+ 10 x) (- 10 x) (+ x x))
            (rr (sub1 x))
        )
        (r x x x x x)
    )
)
(rr 10000)