(define (compute-level1 x)
  (let ((a1 137))
    (let ((b1 283))
      (let ((c1 419))
        (+ (+ (+ x a1) b1) c1)))))

(define (compute-level2 x)
  (let ((a2 571))
    (let ((b2 647))
      (let ((c2 823))
        (- (- (- x a2) b2) c2)))))

(define (compute-level3 x)
  (let ((a3 967))
    (let ((b3 853))
      (let ((c3 739))
        (if (< x 1000)
            (+ (+ (+ x a3) b3) c3)
            (- (- (- x a3) b3) c3))))))

(define (main)
  (let ((v1 (compute-level1 173)))
    (let ((v2 (compute-level2 v1)))
      (let ((v3 (compute-level3 v2)))
        (let ((v4 (compute-level1 v3)))
          (let ((v5 (compute-level2 v4)))
            (let ((v6 (compute-level3 v5)))
              (let ((v7 (compute-level1 v6)))
                (let ((v8 (compute-level2 v7)))
                  (let ((v9 (compute-level3 v8)))
                    (let ((v10 (compute-level1 v9)))
                      (print v10))))))))))))

(main) 