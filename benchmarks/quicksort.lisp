(define (extend l1 l2) (if (empty? l1) l2 (pair (left l1) (extend (right l1) l2)))) (define (filter-less pivot l) (if (empty? l) () (if (< (left l) pivot) (pair (left l) (filter-less pivot (right l))) (filter-less pivot (right l))))) (define (filter-ge pivot l) (if (empty? l) () (if (not (< (left l) pivot)) (pair (left l) (filter-ge pivot (right l))) (filter-ge pivot (right l))))) (define (quicksort l) (if (empty? l) () (let ((pivot (left l))) (let ((rest (right l))) (extend (quicksort (filter-less pivot rest)) (pair pivot (quicksort (filter-ge pivot rest)))))))) (print (quicksort (pair 3 (pair 1 (pair 4 (pair 1 (pair 5 (pair 9 (pair 11 (pair 6 ()))))))))))